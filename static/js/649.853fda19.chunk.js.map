{"version":3,"file":"static/js/649.853fda19.chunk.js","mappings":"mPAIaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kIAEP,qBAAGE,MAAkBC,OAAOC,KAA5B,IAKEC,GAAiBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qLAML,qBAAGE,MAAkBC,OAAOC,KAA5B,IAITG,EAAgBP,EAAAA,GAAAA,MAAH,4LAMb,qBAAGE,MAAkBC,OAAOK,GAA5B,IAMAC,EAAST,EAAAA,GAAAA,OAAH,4OAaNU,GAAYV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,yE,6BClChBY,EAASC,EAAAA,GAAW,CACxBC,KAAMD,EAAAA,KACHE,IAAI,EAAG,2CACPC,IAAI,GAAI,4CACRC,SAAS,YACZC,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUN,EAAAA,KACPE,IAAI,EAAG,6CACPK,QAAQ,WAAY,mDACpBH,SAAS,cAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,2CACA,SAAC,KAAD,CACEC,cAAe,CAAEV,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDM,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAIH,GACZL,GAASS,EAAAA,EAAAA,IAASJ,IAClBC,EAAQI,WACT,EAPH,UASE,UAAC3B,EAAD,CAAgB4B,aAAa,MAA7B,WACE,UAAC1B,EAAD,uBAEE,SAACR,EAAD,CAAOe,KAAK,OAAOoB,YAAY,OAAOjB,UAAQ,KAC9C,SAAC,KAAD,CAAcH,KAAK,OAAOqB,UAAU,UAEtC,UAAC5B,EAAD,oBAEE,SAACR,EAAD,CACEqC,KAAK,QACLtB,KAAK,QACLoB,YAAY,qBACZjB,UAAQ,KAEV,SAAC,KAAD,CAAcH,KAAK,QAAQqB,UAAU,UAEvC,UAAC5B,EAAD,uBAEE,SAACR,EAAD,CACEqC,KAAK,WACLtB,KAAK,WACLoB,YAAY,WACZjB,UAAQ,KAEV,SAAC,KAAD,CAAcH,KAAK,WAAWqB,UAAU,UAE1C,SAAC1B,EAAD,CAAQ2B,KAAK,SAAb,4BAIJ,iDACsB,SAAC1B,EAAD,CAAW2B,GAAG,SAAd,0BAI3B,EChED,EARiB,WACf,OACE,+BACE,SAAChB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const Input = styled(Field)`\n  border: none;\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 0px 2px 8px 1px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n`;\n\nexport const FormOfRegister = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 400px;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  border-radius: 5px;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 600;\n  p {\n    color: ${({ theme }) => theme.colors.red};\n    font-weight: 400;\n    font-size: 12px;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0px 2px 8px 1px rgba(0, 0, 0, 0.3);\n  &:hover,\n  :focus {\n    color: white;\n    background-color: orange;\n  }\n`;\n\nexport const LogInLink = styled(Link)`\n  &:hover,\n  :focus {\n    color: orange;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Input,\n  FormOfRegister,\n  RegisterLabel,\n  Button,\n  LogInLink,\n} from './RegisterForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .min(3, 'Name should contain 3 characters as min')\n    .max(10, 'Name should contain 10 characters as max')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters as min')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one Latin letter')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h1>Register form</h1>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={(values, actions) => {\n          console.log(values);\n          dispatch(register(values));\n          actions.resetForm();\n        }}\n      >\n        <FormOfRegister autoComplete=\"off\">\n          <RegisterLabel>\n            Username\n            <Input name=\"name\" placeholder=\"Name\" required />\n            <ErrorMessage name=\"name\" component=\"p\" />\n          </RegisterLabel>\n          <RegisterLabel>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"usermail@email.com\"\n              required\n            />\n            <ErrorMessage name=\"email\" component=\"p\" />\n          </RegisterLabel>\n          <RegisterLabel>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"********\"\n              required\n            />\n            <ErrorMessage name=\"password\" component=\"p\" />\n          </RegisterLabel>\n          <Button type=\"submit\">Register</Button>\n        </FormOfRegister>\n      </Formik>\n\n      <p>\n        Already registered? <LogInLink to=\"/login\">Log In!</LogInLink>\n      </p>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["Input","styled","Field","theme","colors","black","FormOfRegister","Form","RegisterLabel","red","Button","LogInLink","Link","schema","Yup","name","min","max","required","email","password","matches","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","console","log","register","resetForm","autoComplete","placeholder","component","type","to"],"sourceRoot":""}