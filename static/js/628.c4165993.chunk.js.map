{"version":3,"file":"static/js/628.c4165993.chunk.js","mappings":"iPAGaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kIAEP,qBAAGE,MAAkBC,OAAOC,KAA5B,IAKEC,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qLAMF,qBAAGE,MAAkBC,OAAOC,KAA5B,IAITG,EAAQP,EAAAA,GAAAA,MAAH,4LAML,qBAAGE,MAAkBC,OAAOK,GAA5B,IAMAC,EAAST,EAAAA,GAAAA,OAAH,uI,6BCzBbU,EAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KACPI,IAAI,EAAG,6CACPC,QAAQ,WAAY,mDACpBH,SAAS,cAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,yCACA,SAAC,KAAD,CACEC,cAAe,CAAER,MAAO,GAAIE,SAAU,IACtCO,iBAAkBX,EAClBY,SAAU,SAACC,EAAQC,GACjBN,GAASO,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACT,EANH,UAQE,UAACrB,EAAD,CAAasB,aAAa,MAA1B,WACE,UAACpB,EAAD,oBAEE,SAACR,EAAD,CACE6B,KAAK,QACLC,KAAK,QACLC,YAAY,qBACZjB,UAAQ,KAEV,SAAC,KAAD,CAAcgB,KAAK,QAAQE,UAAU,UAEvC,UAACxB,EAAD,uBAEE,SAACR,EAAD,CACE6B,KAAK,WACLC,KAAK,WACLC,YAAY,WACZjB,UAAQ,KAEV,SAAC,KAAD,CAAcgB,KAAK,WAAWE,UAAU,UAE1C,SAACtB,EAAD,CAAQmB,KAAK,SAAb,0BAIJ,+DAEE,SAAC,KAAD,CAAMI,GAAG,YAAT,4BAIP,EClDD,EARc,WACZ,OACE,+BACE,SAACf,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  border: none;\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 0px 2px 8px 1px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n`;\n\nexport const FormOfLogIn = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 400px;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 600;\n  p {\n    color: ${({ theme }) => theme.colors.red};\n    font-weight: 400;\n    font-size: 12px;\n  }\n`;\n\nexport const Button = styled.button`\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0px 2px 8px 1px rgba(0, 0, 0, 0.3);\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Button, FormOfLogIn, Input, Label } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst schema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters as min')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one Latin letter')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h1>Log In form</h1>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={(values, actions) => {\n          dispatch(logIn(values));\n          actions.resetForm();\n        }}\n      >\n        <FormOfLogIn autoComplete=\"off\">\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"usermail@email.com\"\n              required\n            />\n            <ErrorMessage name=\"email\" component=\"p\" />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"********\"\n              required\n            />\n            <ErrorMessage name=\"password\" component=\"p\" />\n          </Label>\n          <Button type=\"submit\">Log In</Button>\n        </FormOfLogIn>\n      </Formik>\n\n      <p>\n        Don't have an account yet? Please,\n        <Link to=\"/register\">Register!</Link>\n      </p>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Input","styled","Field","theme","colors","black","FormOfLogIn","Form","Label","red","Button","schema","Yup","email","required","password","min","matches","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","autoComplete","type","name","placeholder","component","to"],"sourceRoot":""}